"use strict";$.expr[":"].textEquals=function(e,t,n){var i=new RegExp("^"+n[3].replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")+"$"),r=$(e).text().trim().match(i);return r&&r.length>0},$.expr[":"].textRoughMatch=function(e,t,n){var i=n[3],r=$(e).text().toLowerCase(),a=r.toLowerCase().indexOf(i.toLowerCase())!==-1;return a},window.Behave={},Behave.view=$(document.body),Behave.domTypes={field:{elementTypes:["input","select","option","label","textarea","form"],attrOptions:["name","for","placeholder","contains","type","test-me"]},clickable:{elementTypes:["button","a","select"],attrOptions:["contains","href","test-me"]},icon:{elementTypes:["icon","div","span"],attrOptions:["type","class","test-me"]},display:{elementTypes:["table","tr","td","th",""],attrOptions:["test-me","contains"]}},Behave.find=function(e,t,n){n=n||{};var i="",r=t?{specificOption:Behave.domTypes[t]}:Behave.domTypes;if(_.each(r,function(t){_.each(t.elementTypes,function(n){return!i.length&&void _.each(t.attrOptions,function(t){switch(t){case"contains":i=findByText(e,n);break;case"class":i=findByClass(e,n);break;default:var r="["+t+"='"+e+"']";i=tryToFind(n+r)}if(i.length)return!1})})}),i&&i.is("label")&&(i=getClosestInput(i)),i.length||(i=Behave.view.find(e)),!i.length&&!n.noErrors)throw new Error("Can't find element identified by "+e);if(i.length>1&&!n.findMany)throw new Error("Matched multiple elements identified by "+e+". Use findAll if that's what you expect.");return i},Behave.tryFind=function(e,t){return Behave.find(e,t,{noErrors:!0})},Behave.findAll=function(e,t){return Behave.find(e,t,{findMany:!0})},Behave.fill=function(e){var t=e instanceof jQuery?e:Behave.find(e,"field"),n=function(e){if(t.is("form")||"form"===t.attr("type")){if(!_.isObject(e))throw new Error("Must pass in a hash with signature of {element: value} when filling a whole form");return void _.each(e,function(e,t){Behave.fill(t)["with"](e)})}return"checkbox"===t.attr("type")?t.prop("checked",e):void t.val(e).trigger("input")},i={"with":n};return i},Behave.bexpect=function(e,t){if(_.isObject(jasmine))return _.isString(e)?jasmine.getGlobal().expect(Behave.find(e,t)):jasmine.getGlobal().expect(e);throw new Error("It appears jasmine or expect isn't defined. Thus Behave can't delegate expect")},Behave.click=function(e){if(e instanceof jQuery)return e.is("input")&&"radio"===e.attr("type")?e.click().trigger("click"):e.trigger("click");if(_.isString(e))return Behave.find(e).trigger("click");throw new Error("The identifier passed to click was invalid. It must be either a string or jQuery object")},Behave.choose=function(e){var t=function(t){var n=t instanceof jQuery?t:Behave.find(t);return n.val(e).trigger("change")},n={from:t};return n};var tryToFind=function(e){var t="";try{t=Behave.view.find(e)}catch(n){if(!_.includes(n.message,"Syntax error")&&!_.includes(n.message,"SyntaxError"))throw n}return $(t)},getClosestInput=function(e){var t=e.next();if(t.is("input"))return t;var n=t.find("input");return n.length?n:e},findByClass=function(e,t){var n=_.includes(["icon","div","span"],t)?"glyphicon-":"";t=t||"";var i=t+"."+n+e;return tryToFind(i).first()},findByText=function(e,t){var n,i,r;return n=":textEquals","~"===e[0]&&(e=e.slice(1),n=":textRoughMatch"),i=n+"('"+e+"')",r=t+i,tryToFind(r)},cleanVal=function(e){if(e){if(e=e.replace(" ",""),_.includes(e,"-")){var t=e.split("-");t[1]=t[1][0].toUpperCase()+t[1].substring(1),t[2]&&(t[2]=t[2][0].toUpperCase()+t[2].substring(1)),e=t.join("")}return e}};window.find=Behave.find,window.fill=Behave.fill,window.findAll=Behave.findAll,window.tryFind=Behave.tryFind,window.bexpect=Behave.bexpect,window.click=Behave.click,window.choose=Behave.choose;